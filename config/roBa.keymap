#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        reset_selected_bt {
            bindings = <&bt BT_CLR>;
            key-positions = <34 42>;
        };

        reset_size {
            bindings = <&kp LG(NUMBER_0)>;
            key-positions = <15 27>;
        };

        Layer_6 {
            bindings = <&mo 6>;
            key-positions = <34 35 36>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                  &kp W      &kp E       &kp R                   &kp T                                                             &kp Y                      &kp U    &kp I      &kp O     &kp P
&kp A                  &kp S      &kp D       &lt 1 F                 &kp G                   &kp LS(LG(EQUAL))       &msc MOVE_Y(-10)  &kp H                      &lt 1 J  &lt 1 K    &kp L     &mt RIGHT_SHIFT ENTER
&kp Z                  &kp X      &lt 3 C     &lt 2 V                 &kp B                   &kp LG(MINUS)           &msc MOVE_Y(10)   &kp N                      &lt 2 M  &lt 3 TAB  &mkp MB1  &mkp MB2
&mt LEFT_SHIFT ESCAPE  &kp COMMA  &kp PERIOD  &mt LEFT_CONTROL LANG2  &mt LEFT_COMMAND MINUS  &mt LEFT_ALT LANG1      &kp SPACE         &mt RIGHT_SHIFT BACKSPACE                                &kp GLOBE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        symbols {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH              &kp DOLLAR         &kp PERCENT                                        &kp CARET               &kp AMPERSAND   &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp GRAVE        &kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp EQUAL    &kp K_VOLUME_UP        &kp PAGE_UP    &trans                  &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW       &trans
&kp SQT          &kp SLASH      &kp NON_US_BACKSLASH  &kp COMMA          &kp PERIOD   &kp K_VOLUME_DOWN      &kp PAGE_DOWN  &kp HOME                &kp END         &kp DOWN_ARROW  &trans                &trans
&trans           &trans         &trans                &trans             &trans       &trans                 &trans         &mt RIGHT_SHIFT DELETE                                                        &kp LS(LG(NUMBER_4))
            >;
        };

        NUM {
            bindings = <
&kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS                                &trans  &trans              &trans              &trans               &trans
&kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &kp LG(NUMBER_0)      &trans  &trans  &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)    &kp LC(RIGHT_ARROW)  &trans
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &kp C_MUTE            &trans  &trans  &trans              &kp LC(DOWN_ARROW)  &trans               &trans
&trans        &trans        &trans        &trans        &trans     &trans                &trans  &trans                                                               &trans
            >;
        };

        func {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                                &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11       &kp F12       &kp F13       &kp F14       &kp F15       &msc MOVE_X(20)       &msc MOVE_Y(-10)  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &msc MOVE_X(-10)      &msc MOVE_Y(10)   &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans                &trans            &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &sys_reset   &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &studio_unlock
            >;
        };
    };
};
